"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[283],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,h=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return n?a.createElement(h,s(s({ref:t},u),{},{components:n})):a.createElement(h,s({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3311:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:3,title:"Data Sources"},s=void 0,i={unversionedId:"Core/Components/data-sources",id:"Core/Components/data-sources",title:"Data Sources",description:"A Data Source is a single source of data. This data source can be anything, so long as it can create",source:"@site/docs/Core/Components/data-sources.md",sourceDirName:"Core/Components",slug:"/Core/Components/data-sources",permalink:"/Core/Components/data-sources",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Data Sources"},sidebar:"docs",previous:{title:"Index Strategy",permalink:"/Core/Components/index-strategy"}},c={},l=[{value:"Fetching Paginated Data",id:"fetching-paginated-data",level:2}],u={toc:l};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A Data Source is a single source of data. This data source can be anything, so long as it can create\na ",(0,r.kt)("inlineCode",{parentName:"p"},"Content_Model_Collection")," from the data source."),(0,r.kt)("h2",{id:"fetching-paginated-data"},"Fetching Paginated Data"),(0,r.kt)("p",null,"When importing data, it's generally a good-idea to fetch the data in small batches. This ensures that\na request doesn't time out, and makes it possible to create multiple threads to import data faster."),(0,r.kt)("p",null,"As such, a data source should also be able to provide the next batch of data. This is accomplished\nusing the ",(0,r.kt)("inlineCode",{parentName:"p"},"has_more")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"get_next")," methods. These two methods make it possible for an integration to\nloop through these items and know when to stop."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n/** @var Data_Source $data_source */\nwhile($data_source->has_more()){\n  // Returns the next page of data.\n  $data_source = $data_source->get_next();\n  \n  // Do whatever you need to-do with the data. Perhaps save the items.\n  $data_source->get_data()->each((Model $item) => $item->save());\n}\n?>\n")),(0,r.kt)("p",null,"Typically, these data sources are used by the ",(0,r.kt)("a",{parentName:"p",href:"index-strategy"},"Index Strategy")," to actually fetch the data. Ideally, this wouldn't\nrun in a single thread, but instead run in a separate request using a background process, or something similar."))}p.isMDXComponent=!0}}]);